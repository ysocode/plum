function r(){return r=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var s in t)({}).hasOwnProperty.call(t,s)&&(r[s]=t[s])}return r},r.apply(null,arguments)}const e=["_query"];class t{setParameters(r={}){const{_query:t}=r,s=function(r,e){if(null==r)return{};var t={};for(var s in r)if({}.hasOwnProperty.call(r,s)){if(e.includes(s))continue;t[s]=r[s]}return t}(r,e);this.queryParameters=t||{},this.incomingParameters=s||{}}constructor(r,e,t,s,i,n,a){this.name=r,this.uri=e,this.methods=t,this.parameters=s,this.missingParameters=[],this.bindings=i,this.config=a,this.setParameters(n)}resolveRouteParameters(r){return Object.entries(this.incomingParameters).forEach(([e,t])=>{if(this.parameters.includes(e))if("object"!=typeof t)r=r.replace(`{${e}}`,t);else{const s=this.bindings[e];if(!s)throw new Error(`Plum error: route '${this.name}' has no binding for parameter '${e}'.`);r=r.replace(`{${e}}`,t[s])}else this.missingParameters.push(e)}),r}resolveMissingParameters(r){return 0===this.missingParameters.length||this.missingParameters.forEach(e=>{const t=this.incomingParameters[e];if("object"==typeof t)throw new Error(`Plum error: missing parameter '${e}' has an invalid value.`);r.searchParams.append(e,t)}),r}resolveQueryParameters(r){return Object.entries(this.queryParameters).forEach(([e,t])=>{if("object"==typeof t)throw new Error(`Plum error: missing parameter '${e}' has an invalid value.`);r.searchParams.append(e,t)}),r}compile(){const r=this.resolveRouteParameters(this.uri);return this.url=new URL(r,this.config.url),this.url=this.resolveMissingParameters(this.url),this.url=this.resolveQueryParameters(this.url),this}toString(){if(!this.url)throw new Error(`Plum error: route '${this.name}' is not compiled.`);return this.config.absolute?this.url.href:this.url.pathname+this.url.search+this.url.hash}}class s{constructor(e,t,s=!0,i){this.name=e,this.incomingParameters=t,this.config=i||"undefined"!=typeof plum?plum:globalThis.plum,this.config=r({},this.config,{absolute:s})}has(r){return this.config.routes.hasOwnProperty(r)}fetchRoute(){if(!this.has(this.name))throw new Error(`Plum error: route '${this.name}' is not in the route list.`);const r=this.config.routes[this.name];return new t(this.name,r.uri,r.methods,r.parameters||[],r.bindings||{},this.incomingParameters,{url:this.config.url,port:this.config.port,defaults:this.config.defaults,absolute:this.config.absolute})}}function i(r,e,t,i){const n=new s(r,e,t,i);return r||e||t||i?n.fetchRoute().compile().toString():{has:r=>n.has(r)}}const n={install(r,e){function t(r,t,s,n=e){return i(r,t,s,n)}r.config.globalProperties.route=t,r.provide("route",t)}};export{n as PlumVue,i as route};
