function r(){return r=Object.assign?Object.assign.bind():function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var i in e)({}).hasOwnProperty.call(e,i)&&(r[i]=e[i])}return r},r.apply(null,arguments)}class t{constructor(r,t,e,i,s,n,o){this.name=r,this.uri=t,this.methods=e,this.parameters=i,this.missingParameters=[],this.bindings=s,this.incomingParameters=n,this.config=o}resolveRouteParameters(r){return Object.entries(this.incomingParameters).forEach(([t,e])=>{if(this.parameters.includes(t))if("object"!=typeof e)r=r.replace(`{${t}}`,e);else{const i=this.bindings[t];if(!i)throw new Error(`Plum error: route '${this.name}' has no binding for parameter '${t}'.`);r=r.replace(`{${t}}`,e[i])}else this.missingParameters.push(t)}),r}resolveMissingParameters(r){return 0===this.missingParameters.length||this.missingParameters.forEach(t=>{const e=this.incomingParameters[t];if("object"==typeof e)throw new Error(`Plum error: missing parameter '${t}' has an invalid value.`);r.searchParams.append(t,e)}),r}compile(){const r=this.resolveRouteParameters(this.uri),t=new URL(r,this.config.url);return this.url=this.resolveMissingParameters(t),this}toString(){if(!this.url)throw new Error(`Plum error: route '${this.name}' is not compiled.`);return this.url.href}}class e{constructor(t,e,i=!0,s){this.name=t,this.incomingParameters=e,this.config=s||"undefined"!=typeof plum?plum:globalThis.plum,this.config=r({},this.config,{absolute:i})}fetchRoute(){if(!this.config.routes[this.name])throw new Error(`Plum error: route '${this.name}' is not in the route list.`);const r=this.config.routes[this.name];return new t(this.name,r.uri,r.methods,r.parameters||[],r.bindings||{},this.incomingParameters,{url:this.config.url,port:this.config.port,defaults:this.config.defaults,absolute:this.config.absolute})}}function i(r,t,i,s){return new e(r,t,i,s).fetchRoute().compile().toString()}const s={install(r,t){function e(r,e,s,n=t){return i(r,e,s,n)}r.config.globalProperties.route=e,r.provide("route",e)}};export{s as PlumVue,i as route};
