function e(){return e=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var s in t)({}).hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},e.apply(null,arguments)}const r=["_query"];class t{setParameters(e){const t=e||{},{_query:s}=t,i=function(e,r){if(null==e)return{};var t={};for(var s in e)if({}.hasOwnProperty.call(e,s)){if(r.includes(s))continue;t[s]=e[s]}return t}(t,r);this.queryParameters=s||{},this.incomingParameters=i||{}}constructor(e,r,t,s,i,n,a){this.name=e||null,this.uri=r||null,this.methods=t||[],this.parameters=s||[],this.missingParameters=[],this.bindings=i||{},this.config=a||{},this.setParameters(n||{})}getBinding(e,r=!0){let t=this.bindings[e];if(!t){if(!r)return null;throw new Error(`Plum error: route '${this.name}' has no binding for parameter '${e}'.`)}return t}resolveRouteParameters(e){return Object.entries(this.config.defaults).forEach(([r,t])=>{if("object"!=typeof t)e=e.replace(`{${r}}`,t);else{const s=this.getBinding(r,!1);if(!s)return;e=e.replace(`{${r}}`,t[s])}}),Object.entries(this.incomingParameters).forEach(([r,t])=>{if(this.parameters.includes(r)||this.config.defaults.hasOwnProperty(r))if("object"!=typeof t)e=e.replace(`{${r}}`,t);else{let s=this.getBinding(r);e=e.replace(`{${r}}`,t[s])}else this.missingParameters.push(r)}),e}convertQueryParameters(e){const r={boolean:e=>e?1:0}[typeof e];return r?r(e):e}resolveMissingParameters(e){return 0===this.missingParameters.length||this.missingParameters.forEach(r=>{const t=this.incomingParameters[r];if("object"==typeof t)throw new Error(`Plum error: missing parameter '${r}' has an invalid value.`);e.searchParams.append(r,this.convertQueryParameters(t))}),e}resolveQueryParameters(e){return Object.entries(this.queryParameters).forEach(([r,t])=>{if("object"==typeof t)throw new Error(`Plum error: missing parameter '${r}' has an invalid value.`);e.searchParams.append(r,this.convertQueryParameters(t))}),e}compile(){const e=this.resolveRouteParameters(this.uri);return this.url=new URL(e,this.config.url),this.url=this.resolveMissingParameters(this.url),this.url=this.resolveQueryParameters(this.url),this}toString(){if(!this.url)throw new Error(`Plum error: route '${this.name}' is not compiled.`);return this.config.absolute?this.url.href:this.url.pathname+this.url.search+this.url.hash}}class s{constructor(r,t,s=!0,i){this.name=r||null,this.incomingParameters=t||{},this.config=i||"undefined"!=typeof plum?plum:globalThis.plum,this.config=e({},this.config,{absolute:s})}has(e){return this.config.routes.hasOwnProperty(e)}fetchRoute(){if(!this.has(this.name))throw new Error(`Plum error: route '${this.name}' is not in the route list.`);const e=this.config.routes[this.name];return new t(this.name,e.uri,e.methods,e.parameters,e.bindings,this.incomingParameters,{url:this.config.url,port:this.config.port,defaults:this.config.defaults,absolute:this.config.absolute})}}function i(e,r,t,i){const n=new s(e,r,t,i);return e||r||t||i?n.fetchRoute().compile().toString():{has:e=>n.has(e)}}const n={install(e,r){function t(e,t,s,n=r){return i(e,t,s,n)}e.config.globalProperties.route=t,e.provide("route",t)}};export{n as PlumVue,i as route};
