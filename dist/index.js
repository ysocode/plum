function t(){return t=Object.assign?Object.assign.bind():function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var s in e)({}).hasOwnProperty.call(e,s)&&(t[s]=e[s])}return t},t.apply(null,arguments)}class r{constructor(t,r,e,s,i,n,o){this.name=t,this.uri=r,this.methods=e,this.parameters=s,this.missingParameters=[],this.bindings=i,this.incomingParameters=n||{},this.config=o}resolveRouteParameters(t){return Object.entries(this.incomingParameters).forEach(([r,e])=>{if(this.parameters.includes(r))if("object"!=typeof e)t=t.replace(`{${r}}`,e);else{const s=this.bindings[r];if(!s)throw new Error(`Plum error: route '${this.name}' has no binding for parameter '${r}'.`);t=t.replace(`{${r}}`,e[s])}else this.missingParameters.push(r)}),t}resolveMissingParameters(t){return 0===this.missingParameters.length||this.missingParameters.forEach(r=>{const e=this.incomingParameters[r];if("object"==typeof e)throw new Error(`Plum error: missing parameter '${r}' has an invalid value.`);t.searchParams.append(r,e)}),t}compile(){const t=this.resolveRouteParameters(this.uri),r=new URL(t,this.config.url);return this.url=this.resolveMissingParameters(r),this}toString(){if(!this.url)throw new Error(`Plum error: route '${this.name}' is not compiled.`);return this.config.absolute?this.url.href:this.url.pathname+this.url.search+this.url.hash}}class e{constructor(r,e,s=!0,i){this.name=r,this.incomingParameters=e,this.config=i||"undefined"!=typeof plum?plum:globalThis.plum,this.config=t({},this.config,{absolute:s})}has(t){return this.config.routes.hasOwnProperty(t)}fetchRoute(){if(!this.has(this.name))throw new Error(`Plum error: route '${this.name}' is not in the route list.`);const t=this.config.routes[this.name];return new r(this.name,t.uri,t.methods,t.parameters||[],t.bindings||{},this.incomingParameters,{url:this.config.url,port:this.config.port,defaults:this.config.defaults,absolute:this.config.absolute})}}function s(t,r,s,i){const n=new e(t,r,s,i);return t||r||s||i?n.fetchRoute().compile().toString():{has:t=>n.has(t)}}const i={install(t,r){function e(t,e,i,n=r){return s(t,e,i,n)}t.config.globalProperties.route=e,t.provide("route",e)}};export{i as PlumVue,s as route};
